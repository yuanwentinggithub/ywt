FROM {{ namespace }}/{{ image_prefix }}ironic-base:{{ tag }}
MAINTAINER {{ maintainer }}

{% block ironic_conductor_header %}{% endblock %}

{% import "macros.j2" as macros with context %}

{% if install_type == 'binary' %}
    {% if base_distro in ['centos', 'oraclelinux', 'rhel'] %}
        # TODO(Jeffrey4l): no python-scciclient, python-oneviewclient,
        # python-seamicroclient, pyremotevbox package
        {% set ironic_conductor_packages = [
            'dosfstools',
            'util-linux',
            'openstack-ironic-conductor',
            'qemu-img',
            'ipmitool',
            'parted',
            'gdisk',
            'psmisc',
            'python-dracclient',
            'python-proliantutils',
            'python-ironic-inspector-client',
            'python-pyghmi',
            'pysnmp',
            'python-UcsSdk',
            'openwsman-python',
            'python2-ImcSdk',
            'shellinabox',
            'socat'
        ] %}
    {% elif base_distro in ['ubuntu'] %}
        # TODO(jeffrey4l): no python-dracclient, python-oneviewclient, UcsSdk,
        # pyremotevbox, ImcSdk package
        {% set ironic_conductor_packages = [
            'bsdmainutils',
            'dosfstools',
            'ironic-conductor',
            'qemu-utils',
            'ipmitool',
            'gdisk',
            'psmisc',
            'parted',
            'python-proliantutils',
            'python-ironic-inspector-client',
            'python-pyghmi',
            'python-pysnmp4',
            'python-scciclient',
            'python-seamicroclient',
            'python-openwsman',
            'shellinabox',
            'socat'
        ] %}
    {% endif %}
{% elif install_type == 'source' %}
    {% if base_distro in ['centos', 'oraclelinux', 'rhel'] %}
        {% set ironic_conductor_packages = [
            'dosfstools',
            'util-linux',
            'qemu-img',
            'ipmitool',
            'parted',
            'gdisk',
            'psmisc',
            'fuse',
            'shellinabox',
            'socat'
        ] %}
    {% elif base_distro in ['ubuntu', 'debian'] %}
        {% set ironic_conductor_packages = [
            'bsdmainutils',
            'dosfstools',
            'qemu-utils',
            'ipmitool',
            'gdisk',
            'psmisc',
            'parted',
            'shellinabox',
            'socat'
        ] %}
    {% endif %}
RUN /var/lib/kolla/venv/bin/pip --no-cache-dir install --upgrade -c requirements/upper-constraints.txt -r /ironic/driver-requirements.txt
{% endif %}

{{ macros.install_packages(ironic_conductor_packages | customizable("packages")) }}

COPY extend_start.sh /usr/local/bin/kolla_ironic_extend_start
RUN chmod 755 /usr/local/bin/kolla_ironic_extend_start

{% block ironic_conductor_footer %}{% endblock %}
{% block footer %}{% endblock %}

USER ironic
